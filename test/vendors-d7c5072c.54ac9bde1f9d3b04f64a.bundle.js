"use strict";(self.webpackChunkouterspace_webpack=self.webpackChunkouterspace_webpack||[]).push([[330],{1898:(t,s,i)=>{i.d(s,{Z:()=>r});var e=i(6881);class r{constructor(t=new e.P(1/0,1/0,1/0),s=new e.P(-1/0,-1/0,-1/0)){this.min=t,this.max=s}set(t,s){return this.min.copy(t),this.max.copy(s),this}setFromArray(t){let s=1/0,i=1/0,e=1/0,r=-1/0,h=-1/0,n=-1/0;for(let a=0,o=t.length;a<o;a+=3){const o=t[a],c=t[a+1],l=t[a+2];o<s&&(s=o),c<i&&(i=c),l<e&&(e=l),o>r&&(r=o),c>h&&(h=c),l>n&&(n=l)}return this.min.set(s,i,e),this.max.set(r,h,n),this}setFromBufferAttribute(t){let s=1/0,i=1/0,e=1/0,r=-1/0,h=-1/0,n=-1/0;for(let a=0,o=t.count;a<o;a++){const o=t.getX(a),c=t.getY(a),l=t.getZ(a);o<s&&(s=o),c<i&&(i=c),l<e&&(e=l),o>r&&(r=o),c>h&&(h=c),l>n&&(n=l)}return this.min.set(s,i,e),this.max.set(r,h,n),this}setFromPoints(t){this.makeEmpty();for(let s=0,i=t.length;s<i;s++)this.expandByPoint(t[s]);return this}setFromCenterAndSize(t,s){const i=n.copy(s).multiplyScalar(.5);return this.min.copy(t).sub(i),this.max.copy(t).add(i),this}setFromObject(t){return this.makeEmpty(),this.expandByObject(t)}clone(){return(new this.constructor).copy(this)}copy(t){return this.min.copy(t.min),this.max.copy(t.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(t){return this.isEmpty()?t.set(0,0,0):t.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(t){return this.isEmpty()?t.set(0,0,0):t.subVectors(this.max,this.min)}expandByPoint(t){return this.min.min(t),this.max.max(t),this}expandByVector(t){return this.min.sub(t),this.max.add(t),this}expandByScalar(t){return this.min.addScalar(-t),this.max.addScalar(t),this}expandByObject(t){t.updateWorldMatrix(!1,!1);const s=t.geometry;void 0!==s&&(null===s.boundingBox&&s.computeBoundingBox(),a.copy(s.boundingBox),a.applyMatrix4(t.matrixWorld),this.union(a));const i=t.children;for(let t=0,s=i.length;t<s;t++)this.expandByObject(i[t]);return this}containsPoint(t){return!(t.x<this.min.x||t.x>this.max.x||t.y<this.min.y||t.y>this.max.y||t.z<this.min.z||t.z>this.max.z)}containsBox(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y&&this.min.z<=t.min.z&&t.max.z<=this.max.z}getParameter(t,s){return s.set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y),(t.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(t){return!(t.max.x<this.min.x||t.min.x>this.max.x||t.max.y<this.min.y||t.min.y>this.max.y||t.max.z<this.min.z||t.min.z>this.max.z)}intersectsSphere(t){return this.clampPoint(t.center,n),n.distanceToSquared(t.center)<=t.radius*t.radius}intersectsPlane(t){let s,i;return t.normal.x>0?(s=t.normal.x*this.min.x,i=t.normal.x*this.max.x):(s=t.normal.x*this.max.x,i=t.normal.x*this.min.x),t.normal.y>0?(s+=t.normal.y*this.min.y,i+=t.normal.y*this.max.y):(s+=t.normal.y*this.max.y,i+=t.normal.y*this.min.y),t.normal.z>0?(s+=t.normal.z*this.min.z,i+=t.normal.z*this.max.z):(s+=t.normal.z*this.max.z,i+=t.normal.z*this.min.z),s<=-t.constant&&i>=-t.constant}intersectsTriangle(t){if(this.isEmpty())return!1;this.getCenter(x),d.subVectors(this.max,x),o.subVectors(t.a,x),c.subVectors(t.b,x),l.subVectors(t.c,x),u.subVectors(c,o),y.subVectors(l,c),m.subVectors(o,l);let s=[0,-u.z,u.y,0,-y.z,y.y,0,-m.z,m.y,u.z,0,-u.x,y.z,0,-y.x,m.z,0,-m.x,-u.y,u.x,0,-y.y,y.x,0,-m.y,m.x,0];return!!z(s,o,c,l,d)&&(s=[1,0,0,0,1,0,0,0,1],!!z(s,o,c,l,d)&&(p.crossVectors(u,y),s=[p.x,p.y,p.z],z(s,o,c,l,d)))}clampPoint(t,s){return s.copy(t).clamp(this.min,this.max)}distanceToPoint(t){return n.copy(t).clamp(this.min,this.max).sub(t).length()}getBoundingSphere(t){return this.getCenter(t.center),t.radius=.5*this.getSize(n).length(),t}intersect(t){return this.min.max(t.min),this.max.min(t.max),this.isEmpty()&&this.makeEmpty(),this}union(t){return this.min.min(t.min),this.max.max(t.max),this}applyMatrix4(t){return this.isEmpty()||(h[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(t),h[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(t),h[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(t),h[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(t),h[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(t),h[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(t),h[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(t),h[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(t),this.setFromPoints(h)),this}translate(t){return this.min.add(t),this.max.add(t),this}equals(t){return t.min.equals(this.min)&&t.max.equals(this.max)}}r.prototype.isBox3=!0;const h=[new e.P,new e.P,new e.P,new e.P,new e.P,new e.P,new e.P,new e.P],n=new e.P,a=new r,o=new e.P,c=new e.P,l=new e.P,u=new e.P,y=new e.P,m=new e.P,x=new e.P,d=new e.P,p=new e.P,M=new e.P;function z(t,s,i,e,r){for(let h=0,n=t.length-3;h<=n;h+=3){M.fromArray(t,h);const n=r.x*Math.abs(M.x)+r.y*Math.abs(M.y)+r.z*Math.abs(M.z),a=s.dot(M),o=i.dot(M),c=e.dot(M);if(Math.max(-Math.max(a,o,c),Math.min(a,o,c))>n)return!1}return!0}},3662:(t,s,i)=>{i.d(s,{I:()=>l});var e=i(2043);const r={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},h={h:0,s:0,l:0},n={h:0,s:0,l:0};function a(t,s,i){return i<0&&(i+=1),i>1&&(i-=1),i<1/6?t+6*(s-t)*i:i<.5?s:i<2/3?t+6*(s-t)*(2/3-i):t}function o(t){return t<.04045?.0773993808*t:Math.pow(.9478672986*t+.0521327014,2.4)}function c(t){return t<.0031308?12.92*t:1.055*Math.pow(t,.41666)-.055}class l{constructor(t,s,i){return void 0===s&&void 0===i?this.set(t):this.setRGB(t,s,i)}set(t){return t&&t.isColor?this.copy(t):"number"==typeof t?this.setHex(t):"string"==typeof t&&this.setStyle(t),this}setScalar(t){return this.r=t,this.g=t,this.b=t,this}setHex(t){return t=Math.floor(t),this.r=(t>>16&255)/255,this.g=(t>>8&255)/255,this.b=(255&t)/255,this}setRGB(t,s,i){return this.r=t,this.g=s,this.b=i,this}setHSL(t,s,i){if(t=e.kz(t,1),s=e.uZ(s,0,1),i=e.uZ(i,0,1),0===s)this.r=this.g=this.b=i;else{const e=i<=.5?i*(1+s):i+s-i*s,r=2*i-e;this.r=a(r,e,t+1/3),this.g=a(r,e,t),this.b=a(r,e,t-1/3)}return this}setStyle(t){function s(s){void 0!==s&&parseFloat(s)<1&&console.warn("THREE.Color: Alpha component of "+t+" will be ignored.")}let i;if(i=/^((?:rgb|hsl)a?)\(([^\)]*)\)/.exec(t)){let t;const e=i[1],r=i[2];switch(e){case"rgb":case"rgba":if(t=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(r))return this.r=Math.min(255,parseInt(t[1],10))/255,this.g=Math.min(255,parseInt(t[2],10))/255,this.b=Math.min(255,parseInt(t[3],10))/255,s(t[4]),this;if(t=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(r))return this.r=Math.min(100,parseInt(t[1],10))/100,this.g=Math.min(100,parseInt(t[2],10))/100,this.b=Math.min(100,parseInt(t[3],10))/100,s(t[4]),this;break;case"hsl":case"hsla":if(t=/^\s*(\d*\.?\d+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(r)){const i=parseFloat(t[1])/360,e=parseInt(t[2],10)/100,r=parseInt(t[3],10)/100;return s(t[4]),this.setHSL(i,e,r)}}}else if(i=/^\#([A-Fa-f\d]+)$/.exec(t)){const t=i[1],s=t.length;if(3===s)return this.r=parseInt(t.charAt(0)+t.charAt(0),16)/255,this.g=parseInt(t.charAt(1)+t.charAt(1),16)/255,this.b=parseInt(t.charAt(2)+t.charAt(2),16)/255,this;if(6===s)return this.r=parseInt(t.charAt(0)+t.charAt(1),16)/255,this.g=parseInt(t.charAt(2)+t.charAt(3),16)/255,this.b=parseInt(t.charAt(4)+t.charAt(5),16)/255,this}return t&&t.length>0?this.setColorName(t):this}setColorName(t){const s=r[t.toLowerCase()];return void 0!==s?this.setHex(s):console.warn("THREE.Color: Unknown color "+t),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(t){return this.r=t.r,this.g=t.g,this.b=t.b,this}copyGammaToLinear(t,s=2){return this.r=Math.pow(t.r,s),this.g=Math.pow(t.g,s),this.b=Math.pow(t.b,s),this}copyLinearToGamma(t,s=2){const i=s>0?1/s:1;return this.r=Math.pow(t.r,i),this.g=Math.pow(t.g,i),this.b=Math.pow(t.b,i),this}convertGammaToLinear(t){return this.copyGammaToLinear(this,t),this}convertLinearToGamma(t){return this.copyLinearToGamma(this,t),this}copySRGBToLinear(t){return this.r=o(t.r),this.g=o(t.g),this.b=o(t.b),this}copyLinearToSRGB(t){return this.r=c(t.r),this.g=c(t.g),this.b=c(t.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(){return 255*this.r<<16^255*this.g<<8^255*this.b<<0}getHexString(){return("000000"+this.getHex().toString(16)).slice(-6)}getHSL(t){const s=this.r,i=this.g,e=this.b,r=Math.max(s,i,e),h=Math.min(s,i,e);let n,a;const o=(h+r)/2;if(h===r)n=0,a=0;else{const t=r-h;switch(a=o<=.5?t/(r+h):t/(2-r-h),r){case s:n=(i-e)/t+(i<e?6:0);break;case i:n=(e-s)/t+2;break;case e:n=(s-i)/t+4}n/=6}return t.h=n,t.s=a,t.l=o,t}getStyle(){return"rgb("+(255*this.r|0)+","+(255*this.g|0)+","+(255*this.b|0)+")"}offsetHSL(t,s,i){return this.getHSL(h),h.h+=t,h.s+=s,h.l+=i,this.setHSL(h.h,h.s,h.l),this}add(t){return this.r+=t.r,this.g+=t.g,this.b+=t.b,this}addColors(t,s){return this.r=t.r+s.r,this.g=t.g+s.g,this.b=t.b+s.b,this}addScalar(t){return this.r+=t,this.g+=t,this.b+=t,this}sub(t){return this.r=Math.max(0,this.r-t.r),this.g=Math.max(0,this.g-t.g),this.b=Math.max(0,this.b-t.b),this}multiply(t){return this.r*=t.r,this.g*=t.g,this.b*=t.b,this}multiplyScalar(t){return this.r*=t,this.g*=t,this.b*=t,this}lerp(t,s){return this.r+=(t.r-this.r)*s,this.g+=(t.g-this.g)*s,this.b+=(t.b-this.b)*s,this}lerpColors(t,s,i){return this.r=t.r+(s.r-t.r)*i,this.g=t.g+(s.g-t.g)*i,this.b=t.b+(s.b-t.b)*i,this}lerpHSL(t,s){this.getHSL(h),t.getHSL(n);const i=e.t7(h.h,n.h,s),r=e.t7(h.s,n.s,s),a=e.t7(h.l,n.l,s);return this.setHSL(i,r,a),this}equals(t){return t.r===this.r&&t.g===this.g&&t.b===this.b}fromArray(t,s=0){return this.r=t[s],this.g=t[s+1],this.b=t[s+2],this}toArray(t=[],s=0){return t[s]=this.r,t[s+1]=this.g,t[s+2]=this.b,t}fromBufferAttribute(t,s){return this.r=t.getX(s),this.g=t.getY(s),this.b=t.getZ(s),!0===t.normalized&&(this.r/=255,this.g/=255,this.b/=255),this}toJSON(){return this.getHex()}}l.NAMES=r,l.prototype.isColor=!0,l.prototype.r=1,l.prototype.g=1,l.prototype.b=1},2903:(t,s,i)=>{i.d(s,{U:()=>c});var e=i(7092),r=i(6881),h=i(9203),n=i(2043);const a=new h.y,o=new e._;class c{constructor(t=0,s=0,i=0,e=c.DefaultOrder){this._x=t,this._y=s,this._z=i,this._order=e}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get order(){return this._order}set order(t){this._order=t,this._onChangeCallback()}set(t,s,i,e=this._order){return this._x=t,this._y=s,this._z=i,this._order=e,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(t){return this._x=t._x,this._y=t._y,this._z=t._z,this._order=t._order,this._onChangeCallback(),this}setFromRotationMatrix(t,s=this._order,i=!0){const e=t.elements,r=e[0],h=e[4],a=e[8],o=e[1],c=e[5],l=e[9],u=e[2],y=e[6],m=e[10];switch(s){case"XYZ":this._y=Math.asin((0,n.uZ)(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(-l,m),this._z=Math.atan2(-h,r)):(this._x=Math.atan2(y,c),this._z=0);break;case"YXZ":this._x=Math.asin(-(0,n.uZ)(l,-1,1)),Math.abs(l)<.9999999?(this._y=Math.atan2(a,m),this._z=Math.atan2(o,c)):(this._y=Math.atan2(-u,r),this._z=0);break;case"ZXY":this._x=Math.asin((0,n.uZ)(y,-1,1)),Math.abs(y)<.9999999?(this._y=Math.atan2(-u,m),this._z=Math.atan2(-h,c)):(this._y=0,this._z=Math.atan2(o,r));break;case"ZYX":this._y=Math.asin(-(0,n.uZ)(u,-1,1)),Math.abs(u)<.9999999?(this._x=Math.atan2(y,m),this._z=Math.atan2(o,r)):(this._x=0,this._z=Math.atan2(-h,c));break;case"YZX":this._z=Math.asin((0,n.uZ)(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(-l,c),this._y=Math.atan2(-u,r)):(this._x=0,this._y=Math.atan2(a,m));break;case"XZY":this._z=Math.asin(-(0,n.uZ)(h,-1,1)),Math.abs(h)<.9999999?(this._x=Math.atan2(y,c),this._y=Math.atan2(a,r)):(this._x=Math.atan2(-l,m),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+s)}return this._order=s,!0===i&&this._onChangeCallback(),this}setFromQuaternion(t,s,i){return a.makeRotationFromQuaternion(t),this.setFromRotationMatrix(a,s,i)}setFromVector3(t,s=this._order){return this.set(t.x,t.y,t.z,s)}reorder(t){return o.setFromEuler(this),this.setFromQuaternion(o,t)}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._order===this._order}fromArray(t){return this._x=t[0],this._y=t[1],this._z=t[2],void 0!==t[3]&&(this._order=t[3]),this._onChangeCallback(),this}toArray(t=[],s=0){return t[s]=this._x,t[s+1]=this._y,t[s+2]=this._z,t[s+3]=this._order,t}toVector3(t){return t?t.set(this._x,this._y,this._z):new r.P(this._x,this._y,this._z)}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}}c.prototype.isEuler=!0,c.DefaultOrder="XYZ",c.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"]},4698:(t,s,i)=>{i.d(s,{i:()=>o});var e=i(6881),r=i(4699),h=i(1158);const n=new r.a,a=new e.P;class o{constructor(t=new h.J,s=new h.J,i=new h.J,e=new h.J,r=new h.J,n=new h.J){this.planes=[t,s,i,e,r,n]}set(t,s,i,e,r,h){const n=this.planes;return n[0].copy(t),n[1].copy(s),n[2].copy(i),n[3].copy(e),n[4].copy(r),n[5].copy(h),this}copy(t){const s=this.planes;for(let i=0;i<6;i++)s[i].copy(t.planes[i]);return this}setFromProjectionMatrix(t){const s=this.planes,i=t.elements,e=i[0],r=i[1],h=i[2],n=i[3],a=i[4],o=i[5],c=i[6],l=i[7],u=i[8],y=i[9],m=i[10],x=i[11],d=i[12],p=i[13],M=i[14],z=i[15];return s[0].setComponents(n-e,l-a,x-u,z-d).normalize(),s[1].setComponents(n+e,l+a,x+u,z+d).normalize(),s[2].setComponents(n+r,l+o,x+y,z+p).normalize(),s[3].setComponents(n-r,l-o,x-y,z-p).normalize(),s[4].setComponents(n-h,l-c,x-m,z-M).normalize(),s[5].setComponents(n+h,l+c,x+m,z+M).normalize(),this}intersectsObject(t){const s=t.geometry;return null===s.boundingSphere&&s.computeBoundingSphere(),n.copy(s.boundingSphere).applyMatrix4(t.matrixWorld),this.intersectsSphere(n)}intersectsSprite(t){return n.center.set(0,0,0),n.radius=.7071067811865476,n.applyMatrix4(t.matrixWorld),this.intersectsSphere(n)}intersectsSphere(t){const s=this.planes,i=t.center,e=-t.radius;for(let t=0;t<6;t++){if(s[t].distanceToPoint(i)<e)return!1}return!0}intersectsBox(t){const s=this.planes;for(let i=0;i<6;i++){const e=s[i];if(a.x=e.normal.x>0?t.max.x:t.min.x,a.y=e.normal.y>0?t.max.y:t.min.y,a.z=e.normal.z>0?t.max.z:t.min.z,e.distanceToPoint(a)<0)return!1}return!0}containsPoint(t){const s=this.planes;for(let i=0;i<6;i++)if(s[i].distanceToPoint(t)<0)return!1;return!0}clone(){return(new this.constructor).copy(this)}}},2043:(t,s,i)=>{i.d(s,{qW:()=>r,I3:()=>h,DO:()=>n,uZ:()=>a,kz:()=>o,t7:()=>c,wt:()=>l,gy:()=>u});const e=[];for(let t=0;t<256;t++)e[t]=(t<16?"0":"")+t.toString(16);const r=Math.PI/180,h=180/Math.PI;function n(){const t=4294967295*Math.random()|0,s=4294967295*Math.random()|0,i=4294967295*Math.random()|0,r=4294967295*Math.random()|0;return(e[255&t]+e[t>>8&255]+e[t>>16&255]+e[t>>24&255]+"-"+e[255&s]+e[s>>8&255]+"-"+e[s>>16&15|64]+e[s>>24&255]+"-"+e[63&i|128]+e[i>>8&255]+"-"+e[i>>16&255]+e[i>>24&255]+e[255&r]+e[r>>8&255]+e[r>>16&255]+e[r>>24&255]).toUpperCase()}function a(t,s,i){return Math.max(s,Math.min(i,t))}function o(t,s){return(t%s+s)%s}function c(t,s,i){return(1-i)*t+i*s}function l(t){return 0==(t&t-1)&&0!==t}function u(t){return Math.pow(2,Math.floor(Math.log(t)/Math.LN2))}},1273:(t,s,i)=>{i.d(s,{V:()=>e});class e{constructor(){this.elements=[1,0,0,0,1,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.")}set(t,s,i,e,r,h,n,a,o){const c=this.elements;return c[0]=t,c[1]=e,c[2]=n,c[3]=s,c[4]=r,c[5]=a,c[6]=i,c[7]=h,c[8]=o,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(t){const s=this.elements,i=t.elements;return s[0]=i[0],s[1]=i[1],s[2]=i[2],s[3]=i[3],s[4]=i[4],s[5]=i[5],s[6]=i[6],s[7]=i[7],s[8]=i[8],this}extractBasis(t,s,i){return t.setFromMatrix3Column(this,0),s.setFromMatrix3Column(this,1),i.setFromMatrix3Column(this,2),this}setFromMatrix4(t){const s=t.elements;return this.set(s[0],s[4],s[8],s[1],s[5],s[9],s[2],s[6],s[10]),this}multiply(t){return this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,s){const i=t.elements,e=s.elements,r=this.elements,h=i[0],n=i[3],a=i[6],o=i[1],c=i[4],l=i[7],u=i[2],y=i[5],m=i[8],x=e[0],d=e[3],p=e[6],M=e[1],z=e[4],g=e[7],w=e[2],_=e[5],b=e[8];return r[0]=h*x+n*M+a*w,r[3]=h*d+n*z+a*_,r[6]=h*p+n*g+a*b,r[1]=o*x+c*M+l*w,r[4]=o*d+c*z+l*_,r[7]=o*p+c*g+l*b,r[2]=u*x+y*M+m*w,r[5]=u*d+y*z+m*_,r[8]=u*p+y*g+m*b,this}multiplyScalar(t){const s=this.elements;return s[0]*=t,s[3]*=t,s[6]*=t,s[1]*=t,s[4]*=t,s[7]*=t,s[2]*=t,s[5]*=t,s[8]*=t,this}determinant(){const t=this.elements,s=t[0],i=t[1],e=t[2],r=t[3],h=t[4],n=t[5],a=t[6],o=t[7],c=t[8];return s*h*c-s*n*o-i*r*c+i*n*a+e*r*o-e*h*a}invert(){const t=this.elements,s=t[0],i=t[1],e=t[2],r=t[3],h=t[4],n=t[5],a=t[6],o=t[7],c=t[8],l=c*h-n*o,u=n*a-c*r,y=o*r-h*a,m=s*l+i*u+e*y;if(0===m)return this.set(0,0,0,0,0,0,0,0,0);const x=1/m;return t[0]=l*x,t[1]=(e*o-c*i)*x,t[2]=(n*i-e*h)*x,t[3]=u*x,t[4]=(c*s-e*a)*x,t[5]=(e*r-n*s)*x,t[6]=y*x,t[7]=(i*a-o*s)*x,t[8]=(h*s-i*r)*x,this}transpose(){let t;const s=this.elements;return t=s[1],s[1]=s[3],s[3]=t,t=s[2],s[2]=s[6],s[6]=t,t=s[5],s[5]=s[7],s[7]=t,this}getNormalMatrix(t){return this.setFromMatrix4(t).invert().transpose()}transposeIntoArray(t){const s=this.elements;return t[0]=s[0],t[1]=s[3],t[2]=s[6],t[3]=s[1],t[4]=s[4],t[5]=s[7],t[6]=s[2],t[7]=s[5],t[8]=s[8],this}setUvTransform(t,s,i,e,r,h,n){const a=Math.cos(r),o=Math.sin(r);return this.set(i*a,i*o,-i*(a*h+o*n)+h+t,-e*o,e*a,-e*(-o*h+a*n)+n+s,0,0,1),this}scale(t,s){const i=this.elements;return i[0]*=t,i[3]*=t,i[6]*=t,i[1]*=s,i[4]*=s,i[7]*=s,this}rotate(t){const s=Math.cos(t),i=Math.sin(t),e=this.elements,r=e[0],h=e[3],n=e[6],a=e[1],o=e[4],c=e[7];return e[0]=s*r+i*a,e[3]=s*h+i*o,e[6]=s*n+i*c,e[1]=-i*r+s*a,e[4]=-i*h+s*o,e[7]=-i*n+s*c,this}translate(t,s){const i=this.elements;return i[0]+=t*i[2],i[3]+=t*i[5],i[6]+=t*i[8],i[1]+=s*i[2],i[4]+=s*i[5],i[7]+=s*i[8],this}equals(t){const s=this.elements,i=t.elements;for(let t=0;t<9;t++)if(s[t]!==i[t])return!1;return!0}fromArray(t,s=0){for(let i=0;i<9;i++)this.elements[i]=t[i+s];return this}toArray(t=[],s=0){const i=this.elements;return t[s]=i[0],t[s+1]=i[1],t[s+2]=i[2],t[s+3]=i[3],t[s+4]=i[4],t[s+5]=i[5],t[s+6]=i[6],t[s+7]=i[7],t[s+8]=i[8],t}clone(){return(new this.constructor).fromArray(this.elements)}}e.prototype.isMatrix3=!0},9203:(t,s,i)=>{i.d(s,{y:()=>r});var e=i(6881);class r{constructor(){this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.")}set(t,s,i,e,r,h,n,a,o,c,l,u,y,m,x,d){const p=this.elements;return p[0]=t,p[4]=s,p[8]=i,p[12]=e,p[1]=r,p[5]=h,p[9]=n,p[13]=a,p[2]=o,p[6]=c,p[10]=l,p[14]=u,p[3]=y,p[7]=m,p[11]=x,p[15]=d,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return(new r).fromArray(this.elements)}copy(t){const s=this.elements,i=t.elements;return s[0]=i[0],s[1]=i[1],s[2]=i[2],s[3]=i[3],s[4]=i[4],s[5]=i[5],s[6]=i[6],s[7]=i[7],s[8]=i[8],s[9]=i[9],s[10]=i[10],s[11]=i[11],s[12]=i[12],s[13]=i[13],s[14]=i[14],s[15]=i[15],this}copyPosition(t){const s=this.elements,i=t.elements;return s[12]=i[12],s[13]=i[13],s[14]=i[14],this}setFromMatrix3(t){const s=t.elements;return this.set(s[0],s[3],s[6],0,s[1],s[4],s[7],0,s[2],s[5],s[8],0,0,0,0,1),this}extractBasis(t,s,i){return t.setFromMatrixColumn(this,0),s.setFromMatrixColumn(this,1),i.setFromMatrixColumn(this,2),this}makeBasis(t,s,i){return this.set(t.x,s.x,i.x,0,t.y,s.y,i.y,0,t.z,s.z,i.z,0,0,0,0,1),this}extractRotation(t){const s=this.elements,i=t.elements,e=1/h.setFromMatrixColumn(t,0).length(),r=1/h.setFromMatrixColumn(t,1).length(),n=1/h.setFromMatrixColumn(t,2).length();return s[0]=i[0]*e,s[1]=i[1]*e,s[2]=i[2]*e,s[3]=0,s[4]=i[4]*r,s[5]=i[5]*r,s[6]=i[6]*r,s[7]=0,s[8]=i[8]*n,s[9]=i[9]*n,s[10]=i[10]*n,s[11]=0,s[12]=0,s[13]=0,s[14]=0,s[15]=1,this}makeRotationFromEuler(t){t&&t.isEuler||console.error("THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.");const s=this.elements,i=t.x,e=t.y,r=t.z,h=Math.cos(i),n=Math.sin(i),a=Math.cos(e),o=Math.sin(e),c=Math.cos(r),l=Math.sin(r);if("XYZ"===t.order){const t=h*c,i=h*l,e=n*c,r=n*l;s[0]=a*c,s[4]=-a*l,s[8]=o,s[1]=i+e*o,s[5]=t-r*o,s[9]=-n*a,s[2]=r-t*o,s[6]=e+i*o,s[10]=h*a}else if("YXZ"===t.order){const t=a*c,i=a*l,e=o*c,r=o*l;s[0]=t+r*n,s[4]=e*n-i,s[8]=h*o,s[1]=h*l,s[5]=h*c,s[9]=-n,s[2]=i*n-e,s[6]=r+t*n,s[10]=h*a}else if("ZXY"===t.order){const t=a*c,i=a*l,e=o*c,r=o*l;s[0]=t-r*n,s[4]=-h*l,s[8]=e+i*n,s[1]=i+e*n,s[5]=h*c,s[9]=r-t*n,s[2]=-h*o,s[6]=n,s[10]=h*a}else if("ZYX"===t.order){const t=h*c,i=h*l,e=n*c,r=n*l;s[0]=a*c,s[4]=e*o-i,s[8]=t*o+r,s[1]=a*l,s[5]=r*o+t,s[9]=i*o-e,s[2]=-o,s[6]=n*a,s[10]=h*a}else if("YZX"===t.order){const t=h*a,i=h*o,e=n*a,r=n*o;s[0]=a*c,s[4]=r-t*l,s[8]=e*l+i,s[1]=l,s[5]=h*c,s[9]=-n*c,s[2]=-o*c,s[6]=i*l+e,s[10]=t-r*l}else if("XZY"===t.order){const t=h*a,i=h*o,e=n*a,r=n*o;s[0]=a*c,s[4]=-l,s[8]=o*c,s[1]=t*l+r,s[5]=h*c,s[9]=i*l-e,s[2]=e*l-i,s[6]=n*c,s[10]=r*l+t}return s[3]=0,s[7]=0,s[11]=0,s[12]=0,s[13]=0,s[14]=0,s[15]=1,this}makeRotationFromQuaternion(t){return this.compose(a,t,o)}lookAt(t,s,i){const e=this.elements;return u.subVectors(t,s),0===u.lengthSq()&&(u.z=1),u.normalize(),c.crossVectors(i,u),0===c.lengthSq()&&(1===Math.abs(i.z)?u.x+=1e-4:u.z+=1e-4,u.normalize(),c.crossVectors(i,u)),c.normalize(),l.crossVectors(u,c),e[0]=c.x,e[4]=l.x,e[8]=u.x,e[1]=c.y,e[5]=l.y,e[9]=u.y,e[2]=c.z,e[6]=l.z,e[10]=u.z,this}multiply(t,s){return void 0!==s?(console.warn("THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),this.multiplyMatrices(t,s)):this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,s){const i=t.elements,e=s.elements,r=this.elements,h=i[0],n=i[4],a=i[8],o=i[12],c=i[1],l=i[5],u=i[9],y=i[13],m=i[2],x=i[6],d=i[10],p=i[14],M=i[3],z=i[7],g=i[11],w=i[15],_=e[0],b=e[4],f=e[8],S=e[12],P=e[1],k=e[5],C=e[9],V=e[13],q=e[2],E=e[6],T=e[10],v=e[14],F=e[3],A=e[7],B=e[11],Z=e[15];return r[0]=h*_+n*P+a*q+o*F,r[4]=h*b+n*k+a*E+o*A,r[8]=h*f+n*C+a*T+o*B,r[12]=h*S+n*V+a*v+o*Z,r[1]=c*_+l*P+u*q+y*F,r[5]=c*b+l*k+u*E+y*A,r[9]=c*f+l*C+u*T+y*B,r[13]=c*S+l*V+u*v+y*Z,r[2]=m*_+x*P+d*q+p*F,r[6]=m*b+x*k+d*E+p*A,r[10]=m*f+x*C+d*T+p*B,r[14]=m*S+x*V+d*v+p*Z,r[3]=M*_+z*P+g*q+w*F,r[7]=M*b+z*k+g*E+w*A,r[11]=M*f+z*C+g*T+w*B,r[15]=M*S+z*V+g*v+w*Z,this}multiplyScalar(t){const s=this.elements;return s[0]*=t,s[4]*=t,s[8]*=t,s[12]*=t,s[1]*=t,s[5]*=t,s[9]*=t,s[13]*=t,s[2]*=t,s[6]*=t,s[10]*=t,s[14]*=t,s[3]*=t,s[7]*=t,s[11]*=t,s[15]*=t,this}determinant(){const t=this.elements,s=t[0],i=t[4],e=t[8],r=t[12],h=t[1],n=t[5],a=t[9],o=t[13],c=t[2],l=t[6],u=t[10],y=t[14];return t[3]*(+r*a*l-e*o*l-r*n*u+i*o*u+e*n*y-i*a*y)+t[7]*(+s*a*y-s*o*u+r*h*u-e*h*y+e*o*c-r*a*c)+t[11]*(+s*o*l-s*n*y-r*h*l+i*h*y+r*n*c-i*o*c)+t[15]*(-e*n*c-s*a*l+s*n*u+e*h*l-i*h*u+i*a*c)}transpose(){const t=this.elements;let s;return s=t[1],t[1]=t[4],t[4]=s,s=t[2],t[2]=t[8],t[8]=s,s=t[6],t[6]=t[9],t[9]=s,s=t[3],t[3]=t[12],t[12]=s,s=t[7],t[7]=t[13],t[13]=s,s=t[11],t[11]=t[14],t[14]=s,this}setPosition(t,s,i){const e=this.elements;return t.isVector3?(e[12]=t.x,e[13]=t.y,e[14]=t.z):(e[12]=t,e[13]=s,e[14]=i),this}invert(){const t=this.elements,s=t[0],i=t[1],e=t[2],r=t[3],h=t[4],n=t[5],a=t[6],o=t[7],c=t[8],l=t[9],u=t[10],y=t[11],m=t[12],x=t[13],d=t[14],p=t[15],M=l*d*o-x*u*o+x*a*y-n*d*y-l*a*p+n*u*p,z=m*u*o-c*d*o-m*a*y+h*d*y+c*a*p-h*u*p,g=c*x*o-m*l*o+m*n*y-h*x*y-c*n*p+h*l*p,w=m*l*a-c*x*a-m*n*u+h*x*u+c*n*d-h*l*d,_=s*M+i*z+e*g+r*w;if(0===_)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const b=1/_;return t[0]=M*b,t[1]=(x*u*r-l*d*r-x*e*y+i*d*y+l*e*p-i*u*p)*b,t[2]=(n*d*r-x*a*r+x*e*o-i*d*o-n*e*p+i*a*p)*b,t[3]=(l*a*r-n*u*r-l*e*o+i*u*o+n*e*y-i*a*y)*b,t[4]=z*b,t[5]=(c*d*r-m*u*r+m*e*y-s*d*y-c*e*p+s*u*p)*b,t[6]=(m*a*r-h*d*r-m*e*o+s*d*o+h*e*p-s*a*p)*b,t[7]=(h*u*r-c*a*r+c*e*o-s*u*o-h*e*y+s*a*y)*b,t[8]=g*b,t[9]=(m*l*r-c*x*r-m*i*y+s*x*y+c*i*p-s*l*p)*b,t[10]=(h*x*r-m*n*r+m*i*o-s*x*o-h*i*p+s*n*p)*b,t[11]=(c*n*r-h*l*r-c*i*o+s*l*o+h*i*y-s*n*y)*b,t[12]=w*b,t[13]=(c*x*e-m*l*e+m*i*u-s*x*u-c*i*d+s*l*d)*b,t[14]=(m*n*e-h*x*e-m*i*a+s*x*a+h*i*d-s*n*d)*b,t[15]=(h*l*e-c*n*e+c*i*a-s*l*a-h*i*u+s*n*u)*b,this}scale(t){const s=this.elements,i=t.x,e=t.y,r=t.z;return s[0]*=i,s[4]*=e,s[8]*=r,s[1]*=i,s[5]*=e,s[9]*=r,s[2]*=i,s[6]*=e,s[10]*=r,s[3]*=i,s[7]*=e,s[11]*=r,this}getMaxScaleOnAxis(){const t=this.elements,s=t[0]*t[0]+t[1]*t[1]+t[2]*t[2],i=t[4]*t[4]+t[5]*t[5]+t[6]*t[6],e=t[8]*t[8]+t[9]*t[9]+t[10]*t[10];return Math.sqrt(Math.max(s,i,e))}makeTranslation(t,s,i){return this.set(1,0,0,t,0,1,0,s,0,0,1,i,0,0,0,1),this}makeRotationX(t){const s=Math.cos(t),i=Math.sin(t);return this.set(1,0,0,0,0,s,-i,0,0,i,s,0,0,0,0,1),this}makeRotationY(t){const s=Math.cos(t),i=Math.sin(t);return this.set(s,0,i,0,0,1,0,0,-i,0,s,0,0,0,0,1),this}makeRotationZ(t){const s=Math.cos(t),i=Math.sin(t);return this.set(s,-i,0,0,i,s,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(t,s){const i=Math.cos(s),e=Math.sin(s),r=1-i,h=t.x,n=t.y,a=t.z,o=r*h,c=r*n;return this.set(o*h+i,o*n-e*a,o*a+e*n,0,o*n+e*a,c*n+i,c*a-e*h,0,o*a-e*n,c*a+e*h,r*a*a+i,0,0,0,0,1),this}makeScale(t,s,i){return this.set(t,0,0,0,0,s,0,0,0,0,i,0,0,0,0,1),this}makeShear(t,s,i,e,r,h){return this.set(1,i,r,0,t,1,h,0,s,e,1,0,0,0,0,1),this}compose(t,s,i){const e=this.elements,r=s._x,h=s._y,n=s._z,a=s._w,o=r+r,c=h+h,l=n+n,u=r*o,y=r*c,m=r*l,x=h*c,d=h*l,p=n*l,M=a*o,z=a*c,g=a*l,w=i.x,_=i.y,b=i.z;return e[0]=(1-(x+p))*w,e[1]=(y+g)*w,e[2]=(m-z)*w,e[3]=0,e[4]=(y-g)*_,e[5]=(1-(u+p))*_,e[6]=(d+M)*_,e[7]=0,e[8]=(m+z)*b,e[9]=(d-M)*b,e[10]=(1-(u+x))*b,e[11]=0,e[12]=t.x,e[13]=t.y,e[14]=t.z,e[15]=1,this}decompose(t,s,i){const e=this.elements;let r=h.set(e[0],e[1],e[2]).length();const a=h.set(e[4],e[5],e[6]).length(),o=h.set(e[8],e[9],e[10]).length();this.determinant()<0&&(r=-r),t.x=e[12],t.y=e[13],t.z=e[14],n.copy(this);const c=1/r,l=1/a,u=1/o;return n.elements[0]*=c,n.elements[1]*=c,n.elements[2]*=c,n.elements[4]*=l,n.elements[5]*=l,n.elements[6]*=l,n.elements[8]*=u,n.elements[9]*=u,n.elements[10]*=u,s.setFromRotationMatrix(n),i.x=r,i.y=a,i.z=o,this}makePerspective(t,s,i,e,r,h){void 0===h&&console.warn("THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.");const n=this.elements,a=2*r/(s-t),o=2*r/(i-e),c=(s+t)/(s-t),l=(i+e)/(i-e),u=-(h+r)/(h-r),y=-2*h*r/(h-r);return n[0]=a,n[4]=0,n[8]=c,n[12]=0,n[1]=0,n[5]=o,n[9]=l,n[13]=0,n[2]=0,n[6]=0,n[10]=u,n[14]=y,n[3]=0,n[7]=0,n[11]=-1,n[15]=0,this}makeOrthographic(t,s,i,e,r,h){const n=this.elements,a=1/(s-t),o=1/(i-e),c=1/(h-r),l=(s+t)*a,u=(i+e)*o,y=(h+r)*c;return n[0]=2*a,n[4]=0,n[8]=0,n[12]=-l,n[1]=0,n[5]=2*o,n[9]=0,n[13]=-u,n[2]=0,n[6]=0,n[10]=-2*c,n[14]=-y,n[3]=0,n[7]=0,n[11]=0,n[15]=1,this}equals(t){const s=this.elements,i=t.elements;for(let t=0;t<16;t++)if(s[t]!==i[t])return!1;return!0}fromArray(t,s=0){for(let i=0;i<16;i++)this.elements[i]=t[i+s];return this}toArray(t=[],s=0){const i=this.elements;return t[s]=i[0],t[s+1]=i[1],t[s+2]=i[2],t[s+3]=i[3],t[s+4]=i[4],t[s+5]=i[5],t[s+6]=i[6],t[s+7]=i[7],t[s+8]=i[8],t[s+9]=i[9],t[s+10]=i[10],t[s+11]=i[11],t[s+12]=i[12],t[s+13]=i[13],t[s+14]=i[14],t[s+15]=i[15],t}}r.prototype.isMatrix4=!0;const h=new e.P,n=new r,a=new e.P(0,0,0),o=new e.P(1,1,1),c=new e.P,l=new e.P,u=new e.P},1158:(t,s,i)=>{i.d(s,{J:()=>o});var e=i(1273),r=i(6881);const h=new r.P,n=new r.P,a=new e.V;class o{constructor(t=new r.P(1,0,0),s=0){this.normal=t,this.constant=s}set(t,s){return this.normal.copy(t),this.constant=s,this}setComponents(t,s,i,e){return this.normal.set(t,s,i),this.constant=e,this}setFromNormalAndCoplanarPoint(t,s){return this.normal.copy(t),this.constant=-s.dot(this.normal),this}setFromCoplanarPoints(t,s,i){const e=h.subVectors(i,s).cross(n.subVectors(t,s)).normalize();return this.setFromNormalAndCoplanarPoint(e,t),this}copy(t){return this.normal.copy(t.normal),this.constant=t.constant,this}normalize(){const t=1/this.normal.length();return this.normal.multiplyScalar(t),this.constant*=t,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(t){return this.normal.dot(t)+this.constant}distanceToSphere(t){return this.distanceToPoint(t.center)-t.radius}projectPoint(t,s){return s.copy(this.normal).multiplyScalar(-this.distanceToPoint(t)).add(t)}intersectLine(t,s){const i=t.delta(h),e=this.normal.dot(i);if(0===e)return 0===this.distanceToPoint(t.start)?s.copy(t.start):null;const r=-(t.start.dot(this.normal)+this.constant)/e;return r<0||r>1?null:s.copy(i).multiplyScalar(r).add(t.start)}intersectsLine(t){const s=this.distanceToPoint(t.start),i=this.distanceToPoint(t.end);return s<0&&i>0||i<0&&s>0}intersectsBox(t){return t.intersectsPlane(this)}intersectsSphere(t){return t.intersectsPlane(this)}coplanarPoint(t){return t.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(t,s){const i=s||a.getNormalMatrix(t),e=this.coplanarPoint(h).applyMatrix4(t),r=this.normal.applyMatrix3(i).normalize();return this.constant=-e.dot(r),this}translate(t){return this.constant-=t.dot(this.normal),this}equals(t){return t.normal.equals(this.normal)&&t.constant===this.constant}clone(){return(new this.constructor).copy(this)}}o.prototype.isPlane=!0},7092:(t,s,i)=>{i.d(s,{_:()=>r});var e=i(2043);class r{constructor(t=0,s=0,i=0,e=1){this._x=t,this._y=s,this._z=i,this._w=e}static slerp(t,s,i,e){return console.warn("THREE.Quaternion: Static .slerp() has been deprecated. Use qm.slerpQuaternions( qa, qb, t ) instead."),i.slerpQuaternions(t,s,e)}static slerpFlat(t,s,i,e,r,h,n){let a=i[e+0],o=i[e+1],c=i[e+2],l=i[e+3];const u=r[h+0],y=r[h+1],m=r[h+2],x=r[h+3];if(0===n)return t[s+0]=a,t[s+1]=o,t[s+2]=c,void(t[s+3]=l);if(1===n)return t[s+0]=u,t[s+1]=y,t[s+2]=m,void(t[s+3]=x);if(l!==x||a!==u||o!==y||c!==m){let t=1-n;const s=a*u+o*y+c*m+l*x,i=s>=0?1:-1,e=1-s*s;if(e>Number.EPSILON){const r=Math.sqrt(e),h=Math.atan2(r,s*i);t=Math.sin(t*h)/r,n=Math.sin(n*h)/r}const r=n*i;if(a=a*t+u*r,o=o*t+y*r,c=c*t+m*r,l=l*t+x*r,t===1-n){const t=1/Math.sqrt(a*a+o*o+c*c+l*l);a*=t,o*=t,c*=t,l*=t}}t[s]=a,t[s+1]=o,t[s+2]=c,t[s+3]=l}static multiplyQuaternionsFlat(t,s,i,e,r,h){const n=i[e],a=i[e+1],o=i[e+2],c=i[e+3],l=r[h],u=r[h+1],y=r[h+2],m=r[h+3];return t[s]=n*m+c*l+a*y-o*u,t[s+1]=a*m+c*u+o*l-n*y,t[s+2]=o*m+c*y+n*u-a*l,t[s+3]=c*m-n*l-a*u-o*y,t}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get w(){return this._w}set w(t){this._w=t,this._onChangeCallback()}set(t,s,i,e){return this._x=t,this._y=s,this._z=i,this._w=e,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(t){return this._x=t.x,this._y=t.y,this._z=t.z,this._w=t.w,this._onChangeCallback(),this}setFromEuler(t,s){if(!t||!t.isEuler)throw new Error("THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.");const i=t._x,e=t._y,r=t._z,h=t._order,n=Math.cos,a=Math.sin,o=n(i/2),c=n(e/2),l=n(r/2),u=a(i/2),y=a(e/2),m=a(r/2);switch(h){case"XYZ":this._x=u*c*l+o*y*m,this._y=o*y*l-u*c*m,this._z=o*c*m+u*y*l,this._w=o*c*l-u*y*m;break;case"YXZ":this._x=u*c*l+o*y*m,this._y=o*y*l-u*c*m,this._z=o*c*m-u*y*l,this._w=o*c*l+u*y*m;break;case"ZXY":this._x=u*c*l-o*y*m,this._y=o*y*l+u*c*m,this._z=o*c*m+u*y*l,this._w=o*c*l-u*y*m;break;case"ZYX":this._x=u*c*l-o*y*m,this._y=o*y*l+u*c*m,this._z=o*c*m-u*y*l,this._w=o*c*l+u*y*m;break;case"YZX":this._x=u*c*l+o*y*m,this._y=o*y*l+u*c*m,this._z=o*c*m-u*y*l,this._w=o*c*l-u*y*m;break;case"XZY":this._x=u*c*l-o*y*m,this._y=o*y*l-u*c*m,this._z=o*c*m+u*y*l,this._w=o*c*l+u*y*m;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+h)}return!1!==s&&this._onChangeCallback(),this}setFromAxisAngle(t,s){const i=s/2,e=Math.sin(i);return this._x=t.x*e,this._y=t.y*e,this._z=t.z*e,this._w=Math.cos(i),this._onChangeCallback(),this}setFromRotationMatrix(t){const s=t.elements,i=s[0],e=s[4],r=s[8],h=s[1],n=s[5],a=s[9],o=s[2],c=s[6],l=s[10],u=i+n+l;if(u>0){const t=.5/Math.sqrt(u+1);this._w=.25/t,this._x=(c-a)*t,this._y=(r-o)*t,this._z=(h-e)*t}else if(i>n&&i>l){const t=2*Math.sqrt(1+i-n-l);this._w=(c-a)/t,this._x=.25*t,this._y=(e+h)/t,this._z=(r+o)/t}else if(n>l){const t=2*Math.sqrt(1+n-i-l);this._w=(r-o)/t,this._x=(e+h)/t,this._y=.25*t,this._z=(a+c)/t}else{const t=2*Math.sqrt(1+l-i-n);this._w=(h-e)/t,this._x=(r+o)/t,this._y=(a+c)/t,this._z=.25*t}return this._onChangeCallback(),this}setFromUnitVectors(t,s){let i=t.dot(s)+1;return i<Number.EPSILON?(i=0,Math.abs(t.x)>Math.abs(t.z)?(this._x=-t.y,this._y=t.x,this._z=0,this._w=i):(this._x=0,this._y=-t.z,this._z=t.y,this._w=i)):(this._x=t.y*s.z-t.z*s.y,this._y=t.z*s.x-t.x*s.z,this._z=t.x*s.y-t.y*s.x,this._w=i),this.normalize()}angleTo(t){return 2*Math.acos(Math.abs(e.uZ(this.dot(t),-1,1)))}rotateTowards(t,s){const i=this.angleTo(t);if(0===i)return this;const e=Math.min(1,s/i);return this.slerp(t,e),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(t){return this._x*t._x+this._y*t._y+this._z*t._z+this._w*t._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let t=this.length();return 0===t?(this._x=0,this._y=0,this._z=0,this._w=1):(t=1/t,this._x=this._x*t,this._y=this._y*t,this._z=this._z*t,this._w=this._w*t),this._onChangeCallback(),this}multiply(t,s){return void 0!==s?(console.warn("THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),this.multiplyQuaternions(t,s)):this.multiplyQuaternions(this,t)}premultiply(t){return this.multiplyQuaternions(t,this)}multiplyQuaternions(t,s){const i=t._x,e=t._y,r=t._z,h=t._w,n=s._x,a=s._y,o=s._z,c=s._w;return this._x=i*c+h*n+e*o-r*a,this._y=e*c+h*a+r*n-i*o,this._z=r*c+h*o+i*a-e*n,this._w=h*c-i*n-e*a-r*o,this._onChangeCallback(),this}slerp(t,s){if(0===s)return this;if(1===s)return this.copy(t);const i=this._x,e=this._y,r=this._z,h=this._w;let n=h*t._w+i*t._x+e*t._y+r*t._z;if(n<0?(this._w=-t._w,this._x=-t._x,this._y=-t._y,this._z=-t._z,n=-n):this.copy(t),n>=1)return this._w=h,this._x=i,this._y=e,this._z=r,this;const a=1-n*n;if(a<=Number.EPSILON){const t=1-s;return this._w=t*h+s*this._w,this._x=t*i+s*this._x,this._y=t*e+s*this._y,this._z=t*r+s*this._z,this.normalize(),this._onChangeCallback(),this}const o=Math.sqrt(a),c=Math.atan2(o,n),l=Math.sin((1-s)*c)/o,u=Math.sin(s*c)/o;return this._w=h*l+this._w*u,this._x=i*l+this._x*u,this._y=e*l+this._y*u,this._z=r*l+this._z*u,this._onChangeCallback(),this}slerpQuaternions(t,s,i){this.copy(t).slerp(s,i)}random(){const t=Math.random(),s=Math.sqrt(1-t),i=Math.sqrt(t),e=2*Math.PI*Math.random(),r=2*Math.PI*Math.random();return this.set(s*Math.cos(e),i*Math.sin(r),i*Math.cos(r),s*Math.sin(e))}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._w===this._w}fromArray(t,s=0){return this._x=t[s],this._y=t[s+1],this._z=t[s+2],this._w=t[s+3],this._onChangeCallback(),this}toArray(t=[],s=0){return t[s]=this._x,t[s+1]=this._y,t[s+2]=this._z,t[s+3]=this._w,t}fromBufferAttribute(t,s){return this._x=t.getX(s),this._y=t.getY(s),this._z=t.getZ(s),this._w=t.getW(s),this}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}}r.prototype.isQuaternion=!0},7540:(t,s,i)=>{i.d(s,{z:()=>u});var e=i(6881);const r=new e.P,h=new e.P,n=new e.P,a=new e.P,o=new e.P,c=new e.P,l=new e.P;class u{constructor(t=new e.P,s=new e.P(0,0,-1)){this.origin=t,this.direction=s}set(t,s){return this.origin.copy(t),this.direction.copy(s),this}copy(t){return this.origin.copy(t.origin),this.direction.copy(t.direction),this}at(t,s){return s.copy(this.direction).multiplyScalar(t).add(this.origin)}lookAt(t){return this.direction.copy(t).sub(this.origin).normalize(),this}recast(t){return this.origin.copy(this.at(t,r)),this}closestPointToPoint(t,s){s.subVectors(t,this.origin);const i=s.dot(this.direction);return i<0?s.copy(this.origin):s.copy(this.direction).multiplyScalar(i).add(this.origin)}distanceToPoint(t){return Math.sqrt(this.distanceSqToPoint(t))}distanceSqToPoint(t){const s=r.subVectors(t,this.origin).dot(this.direction);return s<0?this.origin.distanceToSquared(t):(r.copy(this.direction).multiplyScalar(s).add(this.origin),r.distanceToSquared(t))}distanceSqToSegment(t,s,i,e){h.copy(t).add(s).multiplyScalar(.5),n.copy(s).sub(t).normalize(),a.copy(this.origin).sub(h);const r=.5*t.distanceTo(s),o=-this.direction.dot(n),c=a.dot(this.direction),l=-a.dot(n),u=a.lengthSq(),y=Math.abs(1-o*o);let m,x,d,p;if(y>0)if(m=o*l-c,x=o*c-l,p=r*y,m>=0)if(x>=-p)if(x<=p){const t=1/y;m*=t,x*=t,d=m*(m+o*x+2*c)+x*(o*m+x+2*l)+u}else x=r,m=Math.max(0,-(o*x+c)),d=-m*m+x*(x+2*l)+u;else x=-r,m=Math.max(0,-(o*x+c)),d=-m*m+x*(x+2*l)+u;else x<=-p?(m=Math.max(0,-(-o*r+c)),x=m>0?-r:Math.min(Math.max(-r,-l),r),d=-m*m+x*(x+2*l)+u):x<=p?(m=0,x=Math.min(Math.max(-r,-l),r),d=x*(x+2*l)+u):(m=Math.max(0,-(o*r+c)),x=m>0?r:Math.min(Math.max(-r,-l),r),d=-m*m+x*(x+2*l)+u);else x=o>0?-r:r,m=Math.max(0,-(o*x+c)),d=-m*m+x*(x+2*l)+u;return i&&i.copy(this.direction).multiplyScalar(m).add(this.origin),e&&e.copy(n).multiplyScalar(x).add(h),d}intersectSphere(t,s){r.subVectors(t.center,this.origin);const i=r.dot(this.direction),e=r.dot(r)-i*i,h=t.radius*t.radius;if(e>h)return null;const n=Math.sqrt(h-e),a=i-n,o=i+n;return a<0&&o<0?null:a<0?this.at(o,s):this.at(a,s)}intersectsSphere(t){return this.distanceSqToPoint(t.center)<=t.radius*t.radius}distanceToPlane(t){const s=t.normal.dot(this.direction);if(0===s)return 0===t.distanceToPoint(this.origin)?0:null;const i=-(this.origin.dot(t.normal)+t.constant)/s;return i>=0?i:null}intersectPlane(t,s){const i=this.distanceToPlane(t);return null===i?null:this.at(i,s)}intersectsPlane(t){const s=t.distanceToPoint(this.origin);if(0===s)return!0;return t.normal.dot(this.direction)*s<0}intersectBox(t,s){let i,e,r,h,n,a;const o=1/this.direction.x,c=1/this.direction.y,l=1/this.direction.z,u=this.origin;return o>=0?(i=(t.min.x-u.x)*o,e=(t.max.x-u.x)*o):(i=(t.max.x-u.x)*o,e=(t.min.x-u.x)*o),c>=0?(r=(t.min.y-u.y)*c,h=(t.max.y-u.y)*c):(r=(t.max.y-u.y)*c,h=(t.min.y-u.y)*c),i>h||r>e?null:((r>i||i!=i)&&(i=r),(h<e||e!=e)&&(e=h),l>=0?(n=(t.min.z-u.z)*l,a=(t.max.z-u.z)*l):(n=(t.max.z-u.z)*l,a=(t.min.z-u.z)*l),i>a||n>e?null:((n>i||i!=i)&&(i=n),(a<e||e!=e)&&(e=a),e<0?null:this.at(i>=0?i:e,s)))}intersectsBox(t){return null!==this.intersectBox(t,r)}intersectTriangle(t,s,i,e,r){o.subVectors(s,t),c.subVectors(i,t),l.crossVectors(o,c);let h,n=this.direction.dot(l);if(n>0){if(e)return null;h=1}else{if(!(n<0))return null;h=-1,n=-n}a.subVectors(this.origin,t);const u=h*this.direction.dot(c.crossVectors(a,c));if(u<0)return null;const y=h*this.direction.dot(o.cross(a));if(y<0)return null;if(u+y>n)return null;const m=-h*a.dot(l);return m<0?null:this.at(m/n,r)}applyMatrix4(t){return this.origin.applyMatrix4(t),this.direction.transformDirection(t),this}equals(t){return t.origin.equals(this.origin)&&t.direction.equals(this.direction)}clone(){return(new this.constructor).copy(this)}}},4699:(t,s,i)=>{i.d(s,{a:()=>c});var e=i(1898),r=i(6881);const h=new e.Z,n=new r.P,a=new r.P,o=new r.P;class c{constructor(t=new r.P,s=-1){this.center=t,this.radius=s}set(t,s){return this.center.copy(t),this.radius=s,this}setFromPoints(t,s){const i=this.center;void 0!==s?i.copy(s):h.setFromPoints(t).getCenter(i);let e=0;for(let s=0,r=t.length;s<r;s++)e=Math.max(e,i.distanceToSquared(t[s]));return this.radius=Math.sqrt(e),this}copy(t){return this.center.copy(t.center),this.radius=t.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(t){return t.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(t){return t.distanceTo(this.center)-this.radius}intersectsSphere(t){const s=this.radius+t.radius;return t.center.distanceToSquared(this.center)<=s*s}intersectsBox(t){return t.intersectsSphere(this)}intersectsPlane(t){return Math.abs(t.distanceToPoint(this.center))<=this.radius}clampPoint(t,s){const i=this.center.distanceToSquared(t);return s.copy(t),i>this.radius*this.radius&&(s.sub(this.center).normalize(),s.multiplyScalar(this.radius).add(this.center)),s}getBoundingBox(t){return this.isEmpty()?(t.makeEmpty(),t):(t.set(this.center,this.center),t.expandByScalar(this.radius),t)}applyMatrix4(t){return this.center.applyMatrix4(t),this.radius=this.radius*t.getMaxScaleOnAxis(),this}translate(t){return this.center.add(t),this}expandByPoint(t){o.subVectors(t,this.center);const s=o.lengthSq();if(s>this.radius*this.radius){const t=Math.sqrt(s),i=.5*(t-this.radius);this.center.add(o.multiplyScalar(i/t)),this.radius+=i}return this}union(t){return a.subVectors(t.center,this.center).normalize().multiplyScalar(t.radius),this.expandByPoint(n.copy(t.center).add(a)),this.expandByPoint(n.copy(t.center).sub(a)),this}equals(t){return t.center.equals(this.center)&&t.radius===this.radius}clone(){return(new this.constructor).copy(this)}}},6214:(t,s,i)=>{i.d(s,{$:()=>r});var e=i(2043);class r{constructor(t=1,s=0,i=0){return this.radius=t,this.phi=s,this.theta=i,this}set(t,s,i){return this.radius=t,this.phi=s,this.theta=i,this}copy(t){return this.radius=t.radius,this.phi=t.phi,this.theta=t.theta,this}makeSafe(){const t=1e-6;return this.phi=Math.max(t,Math.min(Math.PI-t,this.phi)),this}setFromVector3(t){return this.setFromCartesianCoords(t.x,t.y,t.z)}setFromCartesianCoords(t,s,i){return this.radius=Math.sqrt(t*t+s*s+i*i),0===this.radius?(this.theta=0,this.phi=0):(this.theta=Math.atan2(t,i),this.phi=Math.acos(e.uZ(s/this.radius,-1,1))),this}clone(){return(new this.constructor).copy(this)}}},8121:(t,s,i)=>{i.d(s,{C:()=>x});var e=i(6881);const r=new e.P,h=new e.P,n=new e.P,a=new e.P,o=new e.P,c=new e.P,l=new e.P,u=new e.P,y=new e.P,m=new e.P;class x{constructor(t=new e.P,s=new e.P,i=new e.P){this.a=t,this.b=s,this.c=i}static getNormal(t,s,i,e){e.subVectors(i,s),r.subVectors(t,s),e.cross(r);const h=e.lengthSq();return h>0?e.multiplyScalar(1/Math.sqrt(h)):e.set(0,0,0)}static getBarycoord(t,s,i,e,a){r.subVectors(e,s),h.subVectors(i,s),n.subVectors(t,s);const o=r.dot(r),c=r.dot(h),l=r.dot(n),u=h.dot(h),y=h.dot(n),m=o*u-c*c;if(0===m)return a.set(-2,-1,-1);const x=1/m,d=(u*l-c*y)*x,p=(o*y-c*l)*x;return a.set(1-d-p,p,d)}static containsPoint(t,s,i,e){return this.getBarycoord(t,s,i,e,a),a.x>=0&&a.y>=0&&a.x+a.y<=1}static getUV(t,s,i,e,r,h,n,o){return this.getBarycoord(t,s,i,e,a),o.set(0,0),o.addScaledVector(r,a.x),o.addScaledVector(h,a.y),o.addScaledVector(n,a.z),o}static isFrontFacing(t,s,i,e){return r.subVectors(i,s),h.subVectors(t,s),r.cross(h).dot(e)<0}set(t,s,i){return this.a.copy(t),this.b.copy(s),this.c.copy(i),this}setFromPointsAndIndices(t,s,i,e){return this.a.copy(t[s]),this.b.copy(t[i]),this.c.copy(t[e]),this}setFromAttributeAndIndices(t,s,i,e){return this.a.fromBufferAttribute(t,s),this.b.fromBufferAttribute(t,i),this.c.fromBufferAttribute(t,e),this}clone(){return(new this.constructor).copy(this)}copy(t){return this.a.copy(t.a),this.b.copy(t.b),this.c.copy(t.c),this}getArea(){return r.subVectors(this.c,this.b),h.subVectors(this.a,this.b),.5*r.cross(h).length()}getMidpoint(t){return t.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(t){return x.getNormal(this.a,this.b,this.c,t)}getPlane(t){return t.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(t,s){return x.getBarycoord(t,this.a,this.b,this.c,s)}getUV(t,s,i,e,r){return x.getUV(t,this.a,this.b,this.c,s,i,e,r)}containsPoint(t){return x.containsPoint(t,this.a,this.b,this.c)}isFrontFacing(t){return x.isFrontFacing(this.a,this.b,this.c,t)}intersectsBox(t){return t.intersectsTriangle(this)}closestPointToPoint(t,s){const i=this.a,e=this.b,r=this.c;let h,n;o.subVectors(e,i),c.subVectors(r,i),u.subVectors(t,i);const a=o.dot(u),x=c.dot(u);if(a<=0&&x<=0)return s.copy(i);y.subVectors(t,e);const d=o.dot(y),p=c.dot(y);if(d>=0&&p<=d)return s.copy(e);const M=a*p-d*x;if(M<=0&&a>=0&&d<=0)return h=a/(a-d),s.copy(i).addScaledVector(o,h);m.subVectors(t,r);const z=o.dot(m),g=c.dot(m);if(g>=0&&z<=g)return s.copy(r);const w=z*x-a*g;if(w<=0&&x>=0&&g<=0)return n=x/(x-g),s.copy(i).addScaledVector(c,n);const _=d*g-z*p;if(_<=0&&p-d>=0&&z-g>=0)return l.subVectors(r,e),n=(p-d)/(p-d+(z-g)),s.copy(e).addScaledVector(l,n);const b=1/(_+w+M);return h=w*b,n=M*b,s.copy(i).addScaledVector(o,h).addScaledVector(c,n)}equals(t){return t.a.equals(this.a)&&t.b.equals(this.b)&&t.c.equals(this.c)}}},1138:(t,s,i)=>{i.d(s,{F:()=>e});class e{constructor(t=0,s=0){this.x=t,this.y=s}get width(){return this.x}set width(t){this.x=t}get height(){return this.y}set height(t){this.y=t}set(t,s){return this.x=t,this.y=s,this}setScalar(t){return this.x=t,this.y=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setComponent(t,s){switch(t){case 0:this.x=s;break;case 1:this.y=s;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y)}copy(t){return this.x=t.x,this.y=t.y,this}add(t,s){return void 0!==s?(console.warn("THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(t,s)):(this.x+=t.x,this.y+=t.y,this)}addScalar(t){return this.x+=t,this.y+=t,this}addVectors(t,s){return this.x=t.x+s.x,this.y=t.y+s.y,this}addScaledVector(t,s){return this.x+=t.x*s,this.y+=t.y*s,this}sub(t,s){return void 0!==s?(console.warn("THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(t,s)):(this.x-=t.x,this.y-=t.y,this)}subScalar(t){return this.x-=t,this.y-=t,this}subVectors(t,s){return this.x=t.x-s.x,this.y=t.y-s.y,this}multiply(t){return this.x*=t.x,this.y*=t.y,this}multiplyScalar(t){return this.x*=t,this.y*=t,this}divide(t){return this.x/=t.x,this.y/=t.y,this}divideScalar(t){return this.multiplyScalar(1/t)}applyMatrix3(t){const s=this.x,i=this.y,e=t.elements;return this.x=e[0]*s+e[3]*i+e[6],this.y=e[1]*s+e[4]*i+e[7],this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this}clamp(t,s){return this.x=Math.max(t.x,Math.min(s.x,this.x)),this.y=Math.max(t.y,Math.min(s.y,this.y)),this}clampScalar(t,s){return this.x=Math.max(t,Math.min(s,this.x)),this.y=Math.max(t,Math.min(s,this.y)),this}clampLength(t,s){const i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(t,Math.min(s,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(t){return this.x*t.x+this.y*t.y}cross(t){return this.x*t.y-this.y*t.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const s=this.x-t.x,i=this.y-t.y;return s*s+i*i}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,s){return this.x+=(t.x-this.x)*s,this.y+=(t.y-this.y)*s,this}lerpVectors(t,s,i){return this.x=t.x+(s.x-t.x)*i,this.y=t.y+(s.y-t.y)*i,this}equals(t){return t.x===this.x&&t.y===this.y}fromArray(t,s=0){return this.x=t[s],this.y=t[s+1],this}toArray(t=[],s=0){return t[s]=this.x,t[s+1]=this.y,t}fromBufferAttribute(t,s,i){return void 0!==i&&console.warn("THREE.Vector2: offset has been removed from .fromBufferAttribute()."),this.x=t.getX(s),this.y=t.getY(s),this}rotateAround(t,s){const i=Math.cos(s),e=Math.sin(s),r=this.x-t.x,h=this.y-t.y;return this.x=r*i-h*e+t.x,this.y=r*e+h*i+t.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}e.prototype.isVector2=!0},6881:(t,s,i)=>{i.d(s,{P:()=>h});var e=i(2043),r=i(7092);class h{constructor(t=0,s=0,i=0){this.x=t,this.y=s,this.z=i}set(t,s,i){return void 0===i&&(i=this.z),this.x=t,this.y=s,this.z=i,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setComponent(t,s){switch(t){case 0:this.x=s;break;case 1:this.y=s;break;case 2:this.z=s;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this}add(t,s){return void 0!==s?(console.warn("THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(t,s)):(this.x+=t.x,this.y+=t.y,this.z+=t.z,this)}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this}addVectors(t,s){return this.x=t.x+s.x,this.y=t.y+s.y,this.z=t.z+s.z,this}addScaledVector(t,s){return this.x+=t.x*s,this.y+=t.y*s,this.z+=t.z*s,this}sub(t,s){return void 0!==s?(console.warn("THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(t,s)):(this.x-=t.x,this.y-=t.y,this.z-=t.z,this)}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this}subVectors(t,s){return this.x=t.x-s.x,this.y=t.y-s.y,this.z=t.z-s.z,this}multiply(t,s){return void 0!==s?(console.warn("THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),this.multiplyVectors(t,s)):(this.x*=t.x,this.y*=t.y,this.z*=t.z,this)}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this}multiplyVectors(t,s){return this.x=t.x*s.x,this.y=t.y*s.y,this.z=t.z*s.z,this}applyEuler(t){return t&&t.isEuler||console.error("THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order."),this.applyQuaternion(a.setFromEuler(t))}applyAxisAngle(t,s){return this.applyQuaternion(a.setFromAxisAngle(t,s))}applyMatrix3(t){const s=this.x,i=this.y,e=this.z,r=t.elements;return this.x=r[0]*s+r[3]*i+r[6]*e,this.y=r[1]*s+r[4]*i+r[7]*e,this.z=r[2]*s+r[5]*i+r[8]*e,this}applyNormalMatrix(t){return this.applyMatrix3(t).normalize()}applyMatrix4(t){const s=this.x,i=this.y,e=this.z,r=t.elements,h=1/(r[3]*s+r[7]*i+r[11]*e+r[15]);return this.x=(r[0]*s+r[4]*i+r[8]*e+r[12])*h,this.y=(r[1]*s+r[5]*i+r[9]*e+r[13])*h,this.z=(r[2]*s+r[6]*i+r[10]*e+r[14])*h,this}applyQuaternion(t){const s=this.x,i=this.y,e=this.z,r=t.x,h=t.y,n=t.z,a=t.w,o=a*s+h*e-n*i,c=a*i+n*s-r*e,l=a*e+r*i-h*s,u=-r*s-h*i-n*e;return this.x=o*a+u*-r+c*-n-l*-h,this.y=c*a+u*-h+l*-r-o*-n,this.z=l*a+u*-n+o*-h-c*-r,this}project(t){return this.applyMatrix4(t.matrixWorldInverse).applyMatrix4(t.projectionMatrix)}unproject(t){return this.applyMatrix4(t.projectionMatrixInverse).applyMatrix4(t.matrixWorld)}transformDirection(t){const s=this.x,i=this.y,e=this.z,r=t.elements;return this.x=r[0]*s+r[4]*i+r[8]*e,this.y=r[1]*s+r[5]*i+r[9]*e,this.z=r[2]*s+r[6]*i+r[10]*e,this.normalize()}divide(t){return this.x/=t.x,this.y/=t.y,this.z/=t.z,this}divideScalar(t){return this.multiplyScalar(1/t)}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this}clamp(t,s){return this.x=Math.max(t.x,Math.min(s.x,this.x)),this.y=Math.max(t.y,Math.min(s.y,this.y)),this.z=Math.max(t.z,Math.min(s.z,this.z)),this}clampScalar(t,s){return this.x=Math.max(t,Math.min(s,this.x)),this.y=Math.max(t,Math.min(s,this.y)),this.z=Math.max(t,Math.min(s,this.z)),this}clampLength(t,s){const i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(t,Math.min(s,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,s){return this.x+=(t.x-this.x)*s,this.y+=(t.y-this.y)*s,this.z+=(t.z-this.z)*s,this}lerpVectors(t,s,i){return this.x=t.x+(s.x-t.x)*i,this.y=t.y+(s.y-t.y)*i,this.z=t.z+(s.z-t.z)*i,this}cross(t,s){return void 0!==s?(console.warn("THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),this.crossVectors(t,s)):this.crossVectors(this,t)}crossVectors(t,s){const i=t.x,e=t.y,r=t.z,h=s.x,n=s.y,a=s.z;return this.x=e*a-r*n,this.y=r*h-i*a,this.z=i*n-e*h,this}projectOnVector(t){const s=t.lengthSq();if(0===s)return this.set(0,0,0);const i=t.dot(this)/s;return this.copy(t).multiplyScalar(i)}projectOnPlane(t){return n.copy(this).projectOnVector(t),this.sub(n)}reflect(t){return this.sub(n.copy(t).multiplyScalar(2*this.dot(t)))}angleTo(t){const s=Math.sqrt(this.lengthSq()*t.lengthSq());if(0===s)return Math.PI/2;const i=this.dot(t)/s;return Math.acos(e.uZ(i,-1,1))}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const s=this.x-t.x,i=this.y-t.y,e=this.z-t.z;return s*s+i*i+e*e}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)+Math.abs(this.z-t.z)}setFromSpherical(t){return this.setFromSphericalCoords(t.radius,t.phi,t.theta)}setFromSphericalCoords(t,s,i){const e=Math.sin(s)*t;return this.x=e*Math.sin(i),this.y=Math.cos(s)*t,this.z=e*Math.cos(i),this}setFromCylindrical(t){return this.setFromCylindricalCoords(t.radius,t.theta,t.y)}setFromCylindricalCoords(t,s,i){return this.x=t*Math.sin(s),this.y=i,this.z=t*Math.cos(s),this}setFromMatrixPosition(t){const s=t.elements;return this.x=s[12],this.y=s[13],this.z=s[14],this}setFromMatrixScale(t){const s=this.setFromMatrixColumn(t,0).length(),i=this.setFromMatrixColumn(t,1).length(),e=this.setFromMatrixColumn(t,2).length();return this.x=s,this.y=i,this.z=e,this}setFromMatrixColumn(t,s){return this.fromArray(t.elements,4*s)}setFromMatrix3Column(t,s){return this.fromArray(t.elements,3*s)}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z}fromArray(t,s=0){return this.x=t[s],this.y=t[s+1],this.z=t[s+2],this}toArray(t=[],s=0){return t[s]=this.x,t[s+1]=this.y,t[s+2]=this.z,t}fromBufferAttribute(t,s,i){return void 0!==i&&console.warn("THREE.Vector3: offset has been removed from .fromBufferAttribute()."),this.x=t.getX(s),this.y=t.getY(s),this.z=t.getZ(s),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const t=2*(Math.random()-.5),s=Math.random()*Math.PI*2,i=Math.sqrt(1-t**2);return this.x=i*Math.cos(s),this.y=i*Math.sin(s),this.z=t,this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}h.prototype.isVector3=!0;const n=new h,a=new r._},223:(t,s,i)=>{i.d(s,{L:()=>e});class e{constructor(t=0,s=0,i=0,e=1){this.x=t,this.y=s,this.z=i,this.w=e}get width(){return this.z}set width(t){this.z=t}get height(){return this.w}set height(t){this.w=t}set(t,s,i,e){return this.x=t,this.y=s,this.z=i,this.w=e,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this.w=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setW(t){return this.w=t,this}setComponent(t,s){switch(t){case 0:this.x=s;break;case 1:this.y=s;break;case 2:this.z=s;break;case 3:this.w=s;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this.w=void 0!==t.w?t.w:1,this}add(t,s){return void 0!==s?(console.warn("THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(t,s)):(this.x+=t.x,this.y+=t.y,this.z+=t.z,this.w+=t.w,this)}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this.w+=t,this}addVectors(t,s){return this.x=t.x+s.x,this.y=t.y+s.y,this.z=t.z+s.z,this.w=t.w+s.w,this}addScaledVector(t,s){return this.x+=t.x*s,this.y+=t.y*s,this.z+=t.z*s,this.w+=t.w*s,this}sub(t,s){return void 0!==s?(console.warn("THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(t,s)):(this.x-=t.x,this.y-=t.y,this.z-=t.z,this.w-=t.w,this)}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this.w-=t,this}subVectors(t,s){return this.x=t.x-s.x,this.y=t.y-s.y,this.z=t.z-s.z,this.w=t.w-s.w,this}multiply(t){return this.x*=t.x,this.y*=t.y,this.z*=t.z,this.w*=t.w,this}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this.w*=t,this}applyMatrix4(t){const s=this.x,i=this.y,e=this.z,r=this.w,h=t.elements;return this.x=h[0]*s+h[4]*i+h[8]*e+h[12]*r,this.y=h[1]*s+h[5]*i+h[9]*e+h[13]*r,this.z=h[2]*s+h[6]*i+h[10]*e+h[14]*r,this.w=h[3]*s+h[7]*i+h[11]*e+h[15]*r,this}divideScalar(t){return this.multiplyScalar(1/t)}setAxisAngleFromQuaternion(t){this.w=2*Math.acos(t.w);const s=Math.sqrt(1-t.w*t.w);return s<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=t.x/s,this.y=t.y/s,this.z=t.z/s),this}setAxisAngleFromRotationMatrix(t){let s,i,e,r;const h=.01,n=.1,a=t.elements,o=a[0],c=a[4],l=a[8],u=a[1],y=a[5],m=a[9],x=a[2],d=a[6],p=a[10];if(Math.abs(c-u)<h&&Math.abs(l-x)<h&&Math.abs(m-d)<h){if(Math.abs(c+u)<n&&Math.abs(l+x)<n&&Math.abs(m+d)<n&&Math.abs(o+y+p-3)<n)return this.set(1,0,0,0),this;s=Math.PI;const t=(o+1)/2,a=(y+1)/2,M=(p+1)/2,z=(c+u)/4,g=(l+x)/4,w=(m+d)/4;return t>a&&t>M?t<h?(i=0,e=.707106781,r=.707106781):(i=Math.sqrt(t),e=z/i,r=g/i):a>M?a<h?(i=.707106781,e=0,r=.707106781):(e=Math.sqrt(a),i=z/e,r=w/e):M<h?(i=.707106781,e=.707106781,r=0):(r=Math.sqrt(M),i=g/r,e=w/r),this.set(i,e,r,s),this}let M=Math.sqrt((d-m)*(d-m)+(l-x)*(l-x)+(u-c)*(u-c));return Math.abs(M)<.001&&(M=1),this.x=(d-m)/M,this.y=(l-x)/M,this.z=(u-c)/M,this.w=Math.acos((o+y+p-1)/2),this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this.w=Math.min(this.w,t.w),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this.w=Math.max(this.w,t.w),this}clamp(t,s){return this.x=Math.max(t.x,Math.min(s.x,this.x)),this.y=Math.max(t.y,Math.min(s.y,this.y)),this.z=Math.max(t.z,Math.min(s.z,this.z)),this.w=Math.max(t.w,Math.min(s.w,this.w)),this}clampScalar(t,s){return this.x=Math.max(t,Math.min(s,this.x)),this.y=Math.max(t,Math.min(s,this.y)),this.z=Math.max(t,Math.min(s,this.z)),this.w=Math.max(t,Math.min(s,this.w)),this}clampLength(t,s){const i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(t,Math.min(s,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z+this.w*t.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,s){return this.x+=(t.x-this.x)*s,this.y+=(t.y-this.y)*s,this.z+=(t.z-this.z)*s,this.w+=(t.w-this.w)*s,this}lerpVectors(t,s,i){return this.x=t.x+(s.x-t.x)*i,this.y=t.y+(s.y-t.y)*i,this.z=t.z+(s.z-t.z)*i,this.w=t.w+(s.w-t.w)*i,this}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z&&t.w===this.w}fromArray(t,s=0){return this.x=t[s],this.y=t[s+1],this.z=t[s+2],this.w=t[s+3],this}toArray(t=[],s=0){return t[s]=this.x,t[s+1]=this.y,t[s+2]=this.z,t[s+3]=this.w,t}fromBufferAttribute(t,s,i){return void 0!==i&&console.warn("THREE.Vector4: offset has been removed from .fromBufferAttribute()."),this.x=t.getX(s),this.y=t.getY(s),this.z=t.getZ(s),this.w=t.getW(s),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}e.prototype.isVector4=!0}}]);